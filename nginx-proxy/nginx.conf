events {
    worker_connections 1024;
}

http {
    # Rate limiting para DoS protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Configuración de timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Límites de conexiones
    limit_conn conn_limit_per_ip 20;
    
    # Configuración upstream para balanceo de carga
    upstream user_service {
        server user-service:3001;
    }
    
    upstream task_service {
        server task-service:3002;
    }

    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # Configuración HTTPS
    server {
        listen 443 ssl;
        http2 on;
        server_name localhost;

        # Certificados SSL
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;
        
        # Configuración SSL segura (TLS 1.2+)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Headers de seguridad
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            rewrite ^/api/users/?(.*)$ /users/$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/tasks/ {
            limit_req zone=api burst=20 nodelay;
            rewrite ^/api/tasks/?(.*)$ /tasks/$1 break;
            proxy_pass http://task_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin {
            return 200 'API Gateway activo - HTTPS con SSL/TLS';
            add_header Content-Type text/plain;
        }
    }
}