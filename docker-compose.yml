services:
  user-service:
    build: ./user-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./user-service/users.db:/app/users.db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend
    deploy:
      replicas: 2

  task-service:
    build: ./task-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      - USER_SERVICE_URL=http://user-service:3001
    volumes:
      - ./task-service/tasks.db:/app/tasks.db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend
    deploy:
      replicas: 2

  nginx-proxy:
    build: ./nginx-proxy
    container_name: nginx-proxyU3
    ports:
      - "80:80"
      - "81:81" 
      - "443:443"
    depends_on:
      - user-service
      - task-service
    volumes:
      - ./nginx-proxy/certs:/etc/nginx/certs:ro
    networks:
      - backend

networks:
  backend:
    driver: bridge